@model HelpEditModel
<dl>
    <dt>
        @Html.Label(Model.ValueField, Model.Lable)
        @Html.Hidden(Model.ValueField, Model.ValueFieldValue)
        @Html.Hidden(Model.ValueField + "HasOpen", "0")
    </dt>
    <dd>
        <div id="@Model.DisplayField" style="float:left">
            <input type="text" readonly="readonly" style="display:inline; float:left" />
            @if (!Model.IsViewModel)
            {
                <div class="search">
                    <img alt="search" width="16" height="16" src="@HelperExtend.imgUrl("search_lg.png")" />
                </div>
                <div class="close">
                    <img alt="search" width="16" height="16" src="@HelperExtend.imgUrl("close_black.png")" />
                </div>
            }

        </div>

        <div style="color:red;">@Html.Raw(Model.Hint)</div><div style="clear:left"></div>
    </dd>
</dl>


<script type="text/javascript">

    $(function () {
        $("#@Model.DisplayField").jqxInput({ placeHolder: "@Model.PlaceHolder", height: 26, width: 310, theme: "orange" });

        $('#@Model.DisplayField').jqxInput('val','@Model.DisplayFieldValue');
        $("#@Model.DisplayField").jqxTooltip({ content:  '@Model.DisplayFieldValue', position: 'mouse', name: 'movieTooltip', theme: "orange"});
        $('#@Model.DisplayField').bind('open', function () { var content = $('#@Model.DisplayField').jqxTooltip('content');
            if (!content) {
                $('#@Model.DisplayField').jqxTooltip('close');
            }

        });

        $("#@Model.DisplayField").find(".search").click(function () {
            $("#@(Model.ValueField + "Dialog")").jqxWindow('open');
        });
        $("#@Model.DisplayField").find(".close").click(function () {
            $("#@Model.ValueField").val("");
            $('#@Model.DisplayField').jqxInput('val',"");

        });

        @if (!string.IsNullOrWhiteSpace(Model.OnCreateCtrol)) {
    <text>@(Model.OnCreateCtrol+ "();")</text>

        }

    });
</script>
<div id="@(Model.ValueField + "Dialog")">
    <div>
        <span>
            @HelperExtend.img("help.png")@Model.HelpTitle
        </span>
    </div>
    <div>
        @if (!string.IsNullOrWhiteSpace(Model.OtherConditionView))
        {

            @Html.Partial(Model.OtherConditionView, Model.ValueField)
        }

        <div id="@(Model.ValueField + "SearchText")">
            <input type="text" />
            <div id="@(Model.ValueField + "SerchBtnID")">@HelperExtend.img("search_lg.png", "height:16px ; width:16px")</div>
        </div>
        @if (Model.IsMutiSelect)
        {
            <text> 按住Ctrl 或Shift可以多选</text>
        }
        <div id="@(Model.ValueField + "DataControl")">
        </div>
       
        <div class="page-footer">
            <div class="btn-wrap">
                <input id="@(Model.ValueField + "Ok")" type="button" style="margin-right: 10px" value="确定" class="btn" />
                <input name="btnReturn" type="button" value="取消" class="btn yellow" onclick="javascript: $('#@(Model.ValueField + "Dialog")').jqxWindow('close');" />
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(function () {
        $('#@(Model.ValueField + "Dialog")').jqxWindow({autoOpen: false, resizable: true,  isModal: true,
            showCollapseButton: false, height: @Model.Height , width: @Model.Width  });
        $('#@(Model.ValueField + "Dialog")').on('resized', function (event) {
            if (@Model.IsTree.ToString().ToLower() ) {
                     $("#@(Model.ValueField + "DataControl")").jqxTreeGrid('render');

        }else
    {
                     $("#@(Model.ValueField + "DataControl")").jqxGrid('render');

    }
    });
    $('#@(Model.ValueField + "Dialog")').on('open', function (event) {

        var hasOpen=$("#@(Model.ValueField + "HasOpen")").val();
        if (hasOpen=="0") {
            $("#@(Model.ValueField + "HasOpen")").val("1");
            var url = "@Model.Url";
            var datafields = @Html.Raw(Model.DataFields);
            var  columns =@Html.Raw(Model.Columns);
            $("#@(Model.ValueField + "SearchText")").jqxInput({ placeHolder: "请输入过滤值", height: 26, width:@(int.Parse(Model.Width)-50), theme: "orange" });
            $("#@(Model.ValueField + "SerchBtnID")").click(function () {
                @if (Model.IsTree)
                {
                <text>$("#@(Model.ValueField + "DataControl")").jqxTreeGrid('updateBoundData');</text>
                }
                else {
                <text>$("#@(Model.ValueField + "DataControl")").jqxGrid('updatebounddata');</text>
                }
            });
            @if (Model.IsTree)
            {

<text> CreateTree("@(Model.ValueField + "DataControl")", url, datafields, columns,
        $.extend({
            isMutilSelect:@Model.IsMutiSelect.ToString().ToLower(),
            adapter: {
                formatData: function (data) {
                    data.@Model.SearchField  = $("#@(Model.ValueField + "SearchText")").val();
                    @if (!string.IsNullOrWhiteSpace(Model.OtherSerchFieldFunction))
                        {
                            @(Model.OtherSerchFieldFunction + "(data);")

                        }
                }
            }},  @Html.Raw(Model.OtherSet) ));</text>

        }else
        { <text> CreateGrid("@(Model.ValueField + "DataControl")", url, datafields, columns,
        $.extend({
            isMutilSelect:@Model.IsMutiSelect.ToString().ToLower(),
            adapter: {
                formatData: function (data) {
                    data.@Model.SearchField  = $("#@(Model.ValueField + "SearchText")").val();
                    @if (!string.IsNullOrWhiteSpace(Model.OtherSerchFieldFunction))
                        {
                            @(Model.OtherSerchFieldFunction + "(data);")

                        }
                }
            }},  @Html.Raw(Model.OtherSet) ));</text>
        }

            $("#@(Model.ValueField + "Ok")").on("click",function(){

                @(Model.ValueField+"GetOk")();
            });
            @if (Model.IsTree)
            {
                <text>
            $("#@(Model.ValueField + "DataControl")").on("rowDoubleClick", function(){

                @(Model.ValueField + "GetOk")();
            });</text>

            }
            else
            {   <text>$("#@(Model.ValueField + "DataControl")").on("rowdoubleclick", function(){

                @(Model.ValueField + "GetOk")();
                });</text>
            }

        }

    });

    });


    function @(Model.ValueField+"GetOk")()
    {
        var result;
          
        if (@Model.IsTree.ToString().ToLower() ) {
            if (@Model.IsMutiSelect.ToString().ToLower() ) {
            var arryval=new   Array ();
            var valuefieldValue="";displayfieldValue="";
            result = $("#@(Model.ValueField + "DataControl")").jqxTreeGrid('getSelection');
            for (var i  in result)
            {
                var data=   result[i] ;
                if (valuefieldValue) {
                    valuefieldValue+=",";
                    displayfieldValue+=",";
                }
                valuefieldValue+=data.@Model.ReturnValueField;
                displayfieldValue+=data.@Model.ReturnDisplayField;
                arryval.push(data );
            }
            result=arryval;
              @if (!string.IsNullOrWhiteSpace(Model.OnOking)) {
                  <text>if(@(Model.OnOking + "(result)!=true")) return;</text>

              }
            $("#@Model.ValueField").val(valuefieldValue);
            $('#@Model.DisplayField').jqxInput('val',displayfieldValue);
            $('#@Model.DisplayField').jqxTooltip({ content:displayfieldValue});
           



        }else
        {
            result = $("#@(Model.ValueField + "DataControl")").jqxTreeGrid('getSelection');
              @if (!string.IsNullOrWhiteSpace(Model.OnOking)) {
                  <text>if(@(Model.OnOking + "(result)!=true")) return;</text>

              }
            $("#@Model.ValueField").val(result[0].@Model.ReturnValueField);
            $('#@Model.DisplayField').jqxInput('val',result[0].@Model.ReturnDisplayField);
            $('#@Model.DisplayField').jqxTooltip({ content:result[0].@Model.ReturnDisplayField });
            @if (!string.IsNullOrWhiteSpace(Model.OtherField))
            {
                string[] otherFields = Model.OtherField.Split(new char[] {',',';' }, StringSplitOptions.RemoveEmptyEntries);
                string[] returnOtherFields = Model.ReturnOtherField.Split(new char[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries);
            for (var i = 0; i < otherFields.Length; i++)
            {
                <text> $("#@otherFields[i]").val(result[0].@returnOtherFields[i]);</text>
            }
        }
        }
    }else
    {
        if (@Model.IsMutiSelect.ToString().ToLower() ) {
            result =$("#@(Model.ValueField + "DataControl")").jqxGrid('getselectedrowindexes');
            var arryval=new   Array ();
            var valuefieldValue="";displayfieldValue="";
            for (var i  in result)
            {
                var data= $('#@(Model.ValueField + "DataControl")').jqxGrid('getrowdata', result[i]);
                if (valuefieldValue) {
                    valuefieldValue+=",";
                    displayfieldValue+=",";
                }
                valuefieldValue+=data.@Model.ReturnValueField;
                displayfieldValue+=data.@Model.ReturnDisplayField;
                arryval.push(data );
            }
            result=arryval;
             @if (!string.IsNullOrWhiteSpace(Model.OnOking)) {
                 <text>if(@(Model.OnOking + "(arryval)!=true")) return;</text>

             }
            $("#@Model.ValueField").val(valuefieldValue);
            $('#@Model.DisplayField').jqxInput('val',displayfieldValue);
            $('#@Model.DisplayField').jqxTooltip({ content:displayfieldValue});
            

        }else
    {
            result =$("#@(Model.ValueField + "DataControl")").jqxGrid('getselectedrowindex');
    result = $('#@(Model.ValueField + "DataControl")').jqxGrid('getrowdata', result);
       @if (!string.IsNullOrWhiteSpace(Model.OnOking)) {
           <text>if(@(Model.OnOking + "(result)!=true")) return;</text>

       }
    $("#@Model.ValueField").val(result.@Model.ReturnValueField);
    $('#@Model.DisplayField').jqxInput('val',result.@Model.ReturnDisplayField);
    $('#@Model.DisplayField').jqxTooltip({ content:result.@Model.ReturnDisplayField });
    @if (!string.IsNullOrWhiteSpace(Model.OtherField))
    {
        string[] otherFields = Model.OtherField.Split(new char[] {',',';' }, StringSplitOptions.RemoveEmptyEntries);
            string[] returnOtherFields = Model.ReturnOtherField.Split(new char[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries);
        for (var i = 0; i < otherFields.Length; i++)
        {
            <text> $("#@otherFields[i]").val(result.@returnOtherFields[i]);</text>
        }
    }

    }
    }
    @if (!string.IsNullOrWhiteSpace(Model.OnOk))
    {
           @(Model.OnOk+"(result);")
    }


    $('#@(Model.ValueField+"Dialog")').jqxWindow('close');
    }
</script>
