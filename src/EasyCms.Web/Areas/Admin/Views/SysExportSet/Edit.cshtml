@model SysExportSet
@{
    ViewBag.Title = "编辑导出设置";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEdit.cshtml";
}

@Styles.Render("~/bundles/upimgcss")
@Scripts.Render("~/bundles/ueditor")
@Scripts.Render("~/bundles/uploadJs")

@using EasyCms.Model
<!--内容-->
<div id="floatHead" class="content-tab-wrap">
    <div class="content-tab">
        <div class="content-tab-ul-wrap">
            <ul>
                <li><a class="selected" href="javascript:;">基本信息</a></li>
                <li><a href="javascript:;">明细信息</a></li>
            </ul>
        </div>
    </div>
</div>
<div class="tab-content">


    @HelperExtend.HiddenFor("ID", Model.ID)
    @HelperExtend.HiddenFor("RecordStatus", Model.RecordStatus.ToString())
    @Html.ValidationSummary()


    @HelperExtend.TextBox("Code", "编号", defaultval: Model.Code, hint: "")

    @HelperExtend.TextBox("Name", "名称", defaultval: Model.Name, hint: "")
    @HelperExtend.RadioGroup("ShowTableCaption", "是否显示表头", "true,false", "显示,不显示", defaultval: Model.ShowTableCaption, hint: "导出的excle标题头是否显示")
    @HelperExtend.TextArea("ExportTable", "涉及到的表", defaultval: Model.ExportTable, hint: "")
    @HelperExtend.TextArea("Note", "备注", defaultval: Model.Note, hint: "")
    
</div>

<div class="tab-content" style="display:none">
    <div id="jqxgrid"></div>

</div>
@section  scripts{
<script type="text/javascript">

    $(document).ready(function () {

        var countries = [

             { value: "AF", label: "Afghanistan" },

             { value: "AL", label: "Albania" },

             { value: "DZ", label: "Algeria" },

             { value: "AR", label: "Argentina" },

             { value: "AM", label: "Armenia" },

             { value: "AU", label: "Australia" },

             { value: "AT", label: "Austria" },

             { value: "AZ", label: "Azerbaijan" },

             { value: "BS", label: "Bahamas" },

             { value: "BH", label: "Bahrain" },

             { value: "BD", label: "Bangladesh" },

             { value: "BB", label: "Barbados" },

             { value: "BY", label: "Belarus" },

             { value: "BE", label: "Belgium" },

             { value: "BZ", label: "Belize" },

             { value: "BJ", label: "Benin" },

             { value: "BM", label: "Bermuda" },

             { value: "BR", label: "Brazil" },

             { value: "BN", label: "Brunei" },

             { value: "BG", label: "Bulgaria" },

             { value: "CM", label: "Cameroon" },

             { value: "CA", label: "Canada" },

             { value: "CL", label: "Chile" },

             { value: "CN", label: "China" },

             { value: "CO", label: "Columbia" },

             { value: "CR", label: "Costa Rica" },

             { value: "HR", label: "Croatia (Hrvatska)" },

             { value: "CU", label: "Cuba" },

             { value: "CY", label: "Cyprus" },

             { value: "CZ", label: "Czech Republic" },

             { value: "DK", label: "Denmark" },

             { value: "TP", label: "East Timor" },

             { value: "EC", label: "Ecuador" },

             { value: "EG", label: "Egypt" },

             { value: "ER", label: "Eritrea" },

             { value: "EE", label: "Estonia" },

             { value: "ET", label: "Ethiopia" },

             { value: "FI", label: "Finland" },

             { value: "FR", label: "France" },

             { value: "DE", label: "Germany" },

             { value: "GR", label: "Greece" },

             { value: "HK", label: "Hong Kong" },

             { value: "HU", label: "Hungary" },

             { value: "IS", label: "Iceland" },

             { value: "IN", label: "India" },

             { value: "ID", label: "Indonesia" },

             { value: "IR", label: "Iran" },

             { value: "IQ", label: "Iraq" },

             { value: "IE", label: "Ireland" },

             { value: "IL", label: "Israel" },

             { value: "IT", label: "Italy" },

             { value: "JM", label: "Jamaica" },

             { value: "JP", label: "Japan" },

             { value: "MX", label: "Mexico" },

             { value: "MC", label: "Monaco" },

             { value: "MA", label: "Morocco" },

             { value: "NL", label: "Netherlands" },

             { value: "NZ", label: "New Zealand" },

             { value: "NE", label: "Niger" },

             { value: "NG", label: "Nigeria" },

             { value: "KP", label: "North Korea" },

             { value: "NO", label: "Norway" },

             { value: "PA", label: "Panama" },

             { value: "PE", label: "Peru" },

             { value: "PH", label: "Philippines" },

             { value: "PL", label: "Poland" },

             { value: "PT", label: "Portugal" },

             { value: "RO", label: "Romania" },

             { value: "RU", label: "Russia" },

             { value: "SA", label: "Saudi Arabia" },

             { value: "SK", label: "Slovak Republic" },

             { value: "SI", label: "Slovenia" },

             { value: "ZA", label: "South Africa" },

             { value: "KR", label: "South Korea" },

             { value: "ES", label: "Spain" },

             { value: "SE", label: "Sweden" },

             { value: "CH", label: "Switzerland" },

             { value: "TN", label: "Tunisia" },

             { value: "TR", label: "Turkey" },

             { value: "UA", label: "Ukraine" },

             { value: "AE", label: "United Arab Emirates" },

             { value: "UK", label: "United Kingdom" },

             { value: "US", label: "United States" }

        ];



        var countriesSource =

        {

            datatype: "array",

            datafields: [

                { name: 'label', type: 'string' },

                { name: 'value', type: 'string' }

            ],

            localdata: countries

        };



        var countriesAdapter = new $.jqx.dataAdapter(countriesSource, {

            autoBind: true

        });



        // prepare the data

        var gridSource =

        {

            datatype: "array",

            localdata:

            [

                { countryCode: "UK" },

                { countryCode: "US" },

                { countryCode: "DE" },

                { countryCode: "FR" },

                { countryCode: "IN" },

                { countryCode: "HK" }

            ],

            datafields: [

                // name - determines the field's name.

                // value - the field's value in the data source.

                // values - specifies the field's values.

                // values.source - specifies the foreign source. The expected value is an array.

                // values.value - specifies the field's value in the foreign source.

                // values.name - specifies the field's name in the foreign source.

                // When the adapter is loaded, each record will have a field called "Country". The "Country" for each record comes from the countriesAdapter where the record's "countryCode" from gridAdapter matches to the "value" from countriesAdapter.

                { name: 'Country', value: 'countryCode', values: { source: countriesAdapter.records, value: 'value', name: 'label' } },

                { name: 'countryCode', type: 'string' }

            ]

        };

        var gridAdapter = new $.jqx.dataAdapter(gridSource);



        $("#jqxgrid").jqxGrid(

        {

            width: 600,

            source: gridAdapter,

            selectionmode: 'singlecell',

            autoheight: true,

            editable: true,

            columns: [

                {

                    text: 'Country', datafield: 'countryCode', displayfield: 'Country', columntype: 'dropdownlist',

                    createeditor: function (row, value, editor) {

                        editor.jqxDropDownList({ source: countriesAdapter, displayMember: 'label', valueMember: 'value' });

                    }

                }

            ]

        });



        $("#jqxgrid").on('cellselect', function (event) {

            var column = $("#jqxgrid").jqxGrid('getcolumn', event.args.datafield);

            var value = $("#jqxgrid").jqxGrid('getcellvalue', event.args.rowindex, column.datafield);

            var displayValue = $("#jqxgrid").jqxGrid('getcellvalue', event.args.rowindex, column.displayfield);



            $("#eventLog").html("<div>Selected Cell<br/>Row: " + event.args.rowindex + ", Column: " + column.text + ", Value: " + value + ", Label: " + displayValue + "</div>");

        });



        $("#jqxgrid").on('cellendedit', function (event) {

            var column = $("#jqxgrid").jqxGrid('getcolumn', event.args.datafield);

            if (column.displayfield != column.datafield) {

                $("#eventLog").html("<div>Cell Edited:<br/>Index: " + event.args.rowindex + ", Column: " + column.text + "<br/>Value: " + event.args.value.value + ", Label: " + event.args.value.label

                    + "<br/>Old Value: " + event.args.oldvalue.value + ", Old Label: " + event.args.oldvalue.label + "</div>"

                    );

            }

            else {

                $("#eventLog").html("<div>Cell Edited:<br/>Row: " + event.args.rowindex + ", Column: " + column.text + "<br/>Value: " + event.args.value

                    + "<br/>Old Value: " + event.args.oldvalue + "</div>"

                    );

            }

        });

    });

</script>



    <script type="text/javascript">

        $(function () {


            //初始化表单验证
            $("form").validate({
                ignore: "",
                rules: {
                    "Code": {
                        required: true,
                        maxlength: 50,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },

                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Code").val(); }
                            }
                        }
                    },
                    Name: {
                        required: true,
                        maxlength: 100,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },
                                ParentID: function () { return $("#ParentID").val(); },
                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Name").val(); },
                                IsCode: false
                            }
                        }
                    },
                    ClassTypeID: { required: true },
                    Note: {
                        maxlength: 500
                    }
                },
                messages: {
                    Code: {
                        required: "请输入编号",
                        maxlength: $.validator.format("编号长度不能大于{0}个字符"),
                        remote: "同级分类下编号重复"
                    },
                    Name: {
                        required: "请输入名称",
                        maxlength: $.validator.format("名称长度不能大于{0}个字符"),
                        remote: "同级分类下名称重复"
                    }
                },
                errorPlacement: errorPlace
            });
        })
    </script>

    @*<script type="text/javascript">
        $(document).ready(function () {
            var url = "@Url.Action("GetMxList")";
            var datafields = [

  { name: 'ID' },
  { name: 'Code' },
  { name: 'Name' },
  { name: 'SourcTable' },
  { name: 'ShowType' },
  { name: 'AggregateType' },
  { name: 'AlignType' },
  { name: 'OrderNo' },
  { name: 'GroupCode' },
  { name: 'GroupName' },
  { name: 'MID' },
  { name: 'FormatType' },

            ];
            var AlignTypes = [];
            @{

                List<Sharp.Common.EnumEnity> AlignTypelist = Sharp.Common.CommonUtils.PhraseEnumToList<ShowType>();
                foreach (var item in AlignTypelist)
	{
		 <text>
            AlignTypes.push({ ID: "@item.ID", Name: "@item.Name" });
           
            </text>

	}

            }
            var AlignTypeSource =

          {

              datatype: "array",

              datafields: [
                  { name: 'ID', type: 'string' },
                  { name: 'Name', type: 'string' }
              ],
              localdata: AlignTypes

          }; 
            var AlignTypeAdapter = new $.jqx.dataAdapter(AlignTypeSource, {
                autoBind: true
            });
            var columns = [
  { text: '编号', dataField: 'Code', cellsalign: "left", width: 100 },

  { text: '名称', dataField: 'Name', cellsalign: "left", width: 100 },

  { text: '所属表', dataField: 'SourcTable', cellsalign: "left", width: 100 },

  {
      text: '类型', dataField: 'ShowType',createeditor: function (row, value, editor) {

          editor.jqxDropDownList({ source:  AlignTypeAdapter, displayMember: 'Name', valueMember: 'ID' });

      }, 
      initeditor: function (row, cellvalue, editor, celltext, pressedkey) {
           
          var items = editor.jqxDropDownList('getItems'); 

          

      },

      geteditorvalue: function (row, cellvalue, editor) { 
          return editor.val(); 
      }
  },
      { text: '对齐方式', dataField: 'AlignType', width: 100,@HelperExtend.ParseEnum(typeof(AlignType)) },
      { text: '格式类型', dataField: 'FormatType', width: 100 },

  { text: '聚合类型', dataField: 'AggregateType', width: 100,@HelperExtend.ParseEnum(typeof(AggregateType)) },


  { text: '顺序', dataField: 'OrderNo', cellsalign: "left", width: 100 },

  { text: '对应表头合并组', dataField: 'GroupCode', cellsalign: "left", width: 100 },

  { text: '对应表头合并组标题', dataField: 'GroupName', cellsalign: "left", width: 100 }


            ];
            CreateGrid("jqxgrid", url, datafields, columns, {
                grid: {
                    editable: true,
                    selectionmode: 'singlecell',
                    editmode: 'click',
                    showtoolbar: true, rendertoolbar: function (toolbar) {

                        var me = this;

                        var container = $("<div style='margin: 5px;'></div>");

                        toolbar.append(container);

                        container.append('<input id="addrowbutton" type="button" value="添加新行" />');
                        container.append('<input style="margin-left: 5px;" id="deleterowbutton" type="button" value="移除一行" />');

                        $("#addrowbutton").jqxButton();
                        $("#deleterowbutton").jqxButton();

                        // create new row.

                        $("#addrowbutton").on('click', function () {
                            var datarow = generaterow();
                            var commit = $("#jqxgrid").jqxGrid('addrow', null, datarow);
                        });
                        // delete row.

                        $("#deleterowbutton").on('click', function () {

                            var selectedrowindex = $("#jqxgrid").jqxGrid('getselectedrowindex');

                            var rowscount = $("#jqxgrid").jqxGrid('getdatainformation').rowscount;

                            if (selectedrowindex >= 0 && selectedrowindex < rowscount) {

                                var id = $("#jqxgrid").jqxGrid('getrowid', selectedrowindex);
                                var commit = $("#jqxgrid").jqxGrid('deleterow', id);
                            }

                        });

                    }
                }
            });


        });
        var generaterow = function (i) {
            var rows = $('#jqxgrid').jqxGrid('getrows');
            var row = {};
            row["ID"] = "";
            row["Code"] = "";
            row["Name"] = "";
            row["SourcTable"] = "";
            row["ShowType"] = "";
            row["AggregateType"] = "";
            row["AlignType"] = "";
            row["OrderNo"] = rows.length;
            row["GroupCode"] = "";
            row["GroupName"] = "";
            row["MID"] = "";
            row["FormatType"] = "";
            return row;

        }
    </script>*@
} 