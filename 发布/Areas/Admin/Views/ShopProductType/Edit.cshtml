@model ShopProductType
@{
    ViewBag.Title = "编辑商品类型";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEdit.cshtml";
}

@Styles.Render("~/bundles/upimgcss")
@Scripts.Render("~/bundles/uploadJs")
@Scripts.Render("~/bundles/jqueryAjax")


@using EasyCms.Model
<!--内容-->
<div id="floatHead" class="content-tab-wrap">
    <div class="content-tab">
        <div class="content-tab-ul-wrap">
            <ul>
                <li><a class="selected" href="javascript:;">基本信息</a></li>
                <li><a href="javascript:;">规格</a></li>
                <li><a href="javascript:;">扩展属性</a></li>
            </ul>
        </div>
    </div>
</div>
<div class="tab-content">

    @HelperExtend.HiddenFor("ID", Model.ID)
    @HelperExtend.HiddenFor("RecordStatus", Model.RecordStatus.ToString())

    @Html.ValidationSummary()

    @HelperExtend.TextBox("Code", "商品类型编号", defaultval: Model.Code, hint: "*编号不能重复")
    @HelperExtend.TextBox("Name", "商品类型名称", defaultval: Model.Name, hint: "*名称不能重复.")


    @{//获取所有商品品牌
        string codes = string.Empty;
        string names = string.Empty;
        bool[] vals = null;
        List<ShopBrandInfo>
        ptList = new EasyCms.Business.ShopProductTypeBll().GetListWithProductType(Model.ID, Model.RecordStatus);
        if (ptList.Count > 0)
        {

            vals = new bool[ptList.Count];
            int i = 0;
            foreach (ShopBrandInfo item in ptList)
            {
                if (!string.IsNullOrEmpty(codes))
                {
                    codes += ",";
                    names += ",";
                }
                codes += "sbd" + item.ID;
                names += item.Name;
                vals[i++] = item.IsSelected;
            }
        }
        HelperExtend.CheckBoxList("关联商品品牌", codes, names, defaultval: vals);
    }
    @HelperExtend.TextArea("Note", "备注", defaultval: Model.Note)
</div>
<div class="tab-content" style="display:none">
    <h1>添加新规格</h1>
    添加供客户可选的规格,如服装类型商品的颜色、尺码。

    <div class="toolbar">
        <div class="box-wrap">
            <a class="menu-btn"></a>
            <div class="l-list">
                <ul class="icon-list">
                    <li><a class="add" href="javascript:;" onclick="javascript: AddExtend(2, '添加新的规格');  "><i></i><span>添加新规格</span></a></li>
                </ul>
            </div>
        </div>
    </div>
    <div id="jqxGg"></div>

</div>
<div class="tab-content" style="display:none">
    <h1>添加扩展属性</h1>
    商品类型是一系列属性的组合，可以用来向客户展示某些商品具有的特有的属性。
    <div class="toolbar">
        <div class="box-wrap">
            <a class="menu-btn"></a>
            <div class="l-list">
                <ul class="icon-list">
                    <li><a class="add" href="javascript:;" onclick="javascript: AddExtend(0, '添加扩展属性');  "><i></i><span>添加扩展属性</span></a></li>
                </ul>
            </div>
        </div>
    </div>
    <div id="jqxKzsx"></div>
</div>




@section  scripts{


    <script type="text/javascript">
       
        $(function () {

            Dialog.create("@Url.Content("~/Content/Images/movie.png")");
            //初始化表单验证
            $("#form1").validate({
                ignore: "",
                rules: {
                    "Code": {
                        required: true,
                        maxlength: 50,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },
                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Code").val(); },
                                IsCode: true
                            }
                        }
                    },
                    Name: {
                        required: true,
                        maxlength: 100,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },
                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Name").val(); },
                                IsCode: false
                            }
                        }
                    },
                    ClassTypeID: { required: true },
                    Note: {
                        maxlength: 500
                    }
                },
                messages: {
                    Code: {
                        required: "请输入编号",
                        maxlength: $.validator.format("编号长度不能大于{0}个字符"),
                        remote: "编号重复"
                    },
                    Name: {
                        required: "请输入名称",
                        maxlength: $.validator.format("名称长度不能大于{0}个字符"),
                        remote: "名称重复"
                    }
                },
                errorPlacement: errorPlace,
                showErrors: function (errorMap, errorList) {
                    $('#jqxLoader').jqxLoader('close');
                    this.defaultShowErrors();
                }

            });
           
        })
    </script>

    <script type="text/javascript">
        /*加载扩展属性和规格*/
        $(function () {
            /*加载规格*/
            var url = "@Url.Action("GetAttrList")";
            var datafields = [{ name: 'ID' }, { name: 'Name' }, { name: 'FullName' }, { name: 'ShowType' }, { name: 'OrderNo' },
            { name: 'CategoryName' }, { name: 'UseAttrImg' }, { name: 'UsageMode' }, { name: 'Vals' }];
            var columns = [
            {
                text: '规格类型', dataField: 'UseAttrImg', width: 100, cellsrenderer: function (row, column, value) {
                    var html = "  <div style='text-align: center; overflow: hidden; padding-bottom: 2px; margin-top: 4px; text-overflow: ellipsis;'>";
                    if (value) {
                        html += "【图片】";
                    } else html += "【文字】";
                    html += "</div>";
                    return html;
                }
            },
      { text: '规格分类', dataField: 'CategoryName', cellsalign: "left", width: 120 },
    { text: '规格名称', dataField: 'FullName', cellsalign: "left", width: 120 },
    { text: '规格值', dataField: 'Vals' },
    { text: '顺序', dataField: 'OrderNo', width: 80 },
      {
          text: '操作', datafield: 'ID', align: "center", cellsalign: "center", width: 100, cellsrenderer: function (row, column, value) {

              var html = "  <div style='text-align: center; overflow: hidden; padding-bottom: 2px; margin-top: 4px; text-overflow: ellipsis;'>";

              html +=  
              "<a  href='javascript:;' onclick='deleteExtendInfo(" + row + ",true);'  >删除规格</a>";

              html += "</div>";
              return html;

          }
      }];
            CreateGrid("jqxGg", url, datafields, columns, {
                isMutilSelect: false, data: {
                    data: {
                        ptypeid: $("#ID").val(),
                        isGg: true
                    }
                }, grid: { autoheight: true }
            });


            /*加载扩展属性*/

            /*加载规格*/
            var urlattr = "@Url.Action("GetAttrList")";

            var columnsattr = [
   { text: '属性分类', dataField: 'CategoryName', cellsalign: "left", width: 120 },
    { text: '属性名称', dataField: 'FullName', cellsalign: "left", width: 120 }, 
           
            { text: '属性值', dataField: 'Vals' },

    { text: '顺序', dataField: 'OrderNo', width: 80 },
       {
           text: '操作', datafield: 'ID', align: "center", cellsalign: "center", width: 200, cellsrenderer: function (row, column, value) {

               var html = "  <div style='text-align: center; overflow: hidden; padding-bottom: 2px; margin-top: 4px; text-overflow: ellipsis;'>";

               html +=   "<a  href='javascript:;' onclick='deleteExtendInfo(" + row + ",false);'  >删除属性</a>"; 
               html += "</div>";
               return html;
               return
           }
       }];
            CreateGrid("jqxKzsx", urlattr, datafields, columnsattr, {
                isMutilSelect: false, data: {
                    data: {
                        ptypeid: $("#ID").val(),
                        isGg: false
                    }
                }, grid: { autoheight: true }
            });


        });

    </script>

    <script type="text/javascript">

        function AddExtend(action, title) {
            Dialog.open("@Url.Action("AddExtend")/" + $("#ID").val() + "/" + action, title, {
                AllWayInit:true, 
                onClose: function (grid) {
                    var content = grid[0].textContent;
                    if (content == "  添加扩展属性") {
                        if (GetThisDialogState()) {
                            $('#jqxKzsx').jqxGrid('updatebounddata');
                        }
                       
                    } else if (content == "  添加新的规格") {
                        if (GetThisDialogState()) {
                            $('#jqxGg').jqxGrid('updatebounddata');
                        }  
                    }
                }
            }, { width: 700, height: 500 });
        } 
    </script>

    <script type="text/javascript">

         
        function deleteExtendInfo(rowindex, isgg) {
          
            var gridid = "jqxKzsx";

            if (isgg) {
                gridid = "jqxGg";
            }
            DelGrid(gridid, '@Url.Action("DeleteExtend")');
        }
    </script>
} 