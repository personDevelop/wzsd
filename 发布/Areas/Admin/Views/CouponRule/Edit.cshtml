@model CouponRule
@{
    ViewBag.Title = "编辑优惠券管理";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEdit.cshtml";
}

@Styles.Render("~/bundles/upimgcss")
@Scripts.Render("~/bundles/ueditor")
@Scripts.Render("~/bundles/uploadJs")

@using EasyCms.Model
<!--内容-->
<div id="floatHead" class="content-tab-wrap">
    <div class="content-tab">
        <div class="content-tab-ul-wrap">
            <ul>
                <li><a class="selected" href="javascript:;">基本信息</a></li>
                <li><a href="javascript:;">扩展信息</a></li>
            </ul>
        </div>
    </div>
</div>
<div class="tab-content">


    @HelperExtend.HiddenFor("ID", Model.ID)
    @HelperExtend.HiddenFor("RecordStatus", Model.RecordStatus.ToString())
    @Html.ValidationSummary()


    @HelperExtend.TextBox("Name", "优惠券名称", defaultval: Model.Name, hint: "")

    @HelperExtend.RadioGroup("CouponType", "优惠券类型", "0,1,2", "普通优惠券,积分兑换优惠券,系统派发优惠券", defaultval: Model.CouponType, hint: "")

    @HelperExtend.RadioGroup("CanMutilUse", "可以使用多张", "false,true", "同一订单限制使用一张优惠券,不限制", defaultval: Model.CanMutilUse, hint: "一次购物，优惠券是否可以使用多张")
    @HelperExtend.RadioGroup("IsCanCombie", "可合并使用", "true,false", "合并使用,单独使用", defaultval: Model.IsCanCombie, hint: "合并使用：可和其他优惠券一并使用，单独使用：不能和其他优惠券一并使用")
    @HelperExtend.Number("JE", "面值", defaultval: Model.JE, hint: "",max:1000000,decimalDigits:2)
    
    @HelperExtend.Number("NeedPoint", "需要积分", defaultval: Model.NeedPoint, hint: "如果使用积分兑换的方式获取，需要多少积分", max: 1000000 )
     
    @HelperExtend.RadioGroup("QxLx", "期限类型", "0,1", "期限范围,固定天数", defaultval: Model.QxLx, hint: "",onChange:"isShow")


    @HelperExtend.RadioGroup("IsCongZengSongKaiShi", "从获取开始计算时间", "false,true", "否,是", defaultval: Model.IsCongZengSongKaiShi)

    @HelperExtend.DateTime("StartDate", "有效时间起", defaultval: Model.StartDate, hint: "")

    @HelperExtend.DateTime("EndDate", "有效时间止", defaultval: Model.EndDate, hint: "")

    @HelperExtend.Number("QXTS", "期限天数", defaultval: Model.QXTS, hint: "", max: 1000000)



    @HelperExtend.TextBox("MinPrice", "最低消费金额", defaultval: Model.MinPrice, hint: "")

    @HelperExtend.TextBox("MaxPrice", "最大消费金额", defaultval: Model.MaxPrice, hint: "")
    @HelperExtend.RadioGroup("IsEnable", "是否启用", "false,true", "否,是", defaultval: Model.IsEnable)

    @Html.Partial("_HelpEditProductCategory", new HelpEditShopProductCategory()
 {
     DisplayField = "ShopCategoryName",
     DisplayFieldValue = Model.ShopCategoryName,
     Hint = "不选择商品分类，就适合全部商品",
     IsMutiSelect = false,
     Lable = "商品分类",
     ValueField = "CategoryId",
     ValueFieldValue = Model.CategoryId
 })
    @Html.Partial("_HelpEditProduct", new HelpEditShopProductModel()
  {
      DisplayField = "ShopName",
      DisplayFieldValue = Model.ShopName,
      Hint = "不选择商品，就适合当前分类下所有商品",
      Lable = "商品",
      ValueField = "ProductId",
      ValueFieldValue = Model.ProductId
  })

    @Html.Partial("_HelpEdit", new HelpEditModel()
{
    DisplayField = "ShopSkuCode",
    DisplayFieldValue = Model.ShopSkuCode,
    Hint = "不选择SKU,就适合当前商品下所有规格类型商品",
    Lable = "商品SKU",
    ValueField = "ProductSku",
    ValueFieldValue = Model.ProductSku,
    Columns = @"[
                   { text: 'SKU编号', dataField: 'SKU',   width: 100 },
                    { text: '规格', dataField: 'AttriVal',  width:  300  },
                   { text: '市场价', dataField: 'MarketPrice',  width: 80 },
                   { text: '销售价', dataField: 'SalePrice',  width: 80 }  ]",
    DataFields = @"[

               { name: 'SkuID', type: 'string' },



               { name: 'SKU', type: 'string' },

               { name: 'AttriVal', type: 'string' },
      { name: 'MarketPrice', type: 'string' },
      { name: 'SalePrice', type: 'string' }
                            ]",
    HelpTitle = "选择商品SKU",
    ReturnDisplayField = "SKU",
    ReturnValueField = "SkuID",
    SearchField = "SKUName",
    Url = Url.RouteUrl("ApiWithWeb", new { controller = "ShopProductApi", action = "GetSkuByProductID" }),
    OtherSerchFieldFunction = "GetProductCondition", 
    OtherSet= "{ data:{root: 'data'}}",

})


</div>

<div class="tab-content" style="display:none">
    @HelperExtend.Number("MaxCount", "最大生成数量", defaultval: Model.MaxCount, hint: "当前优惠券最多生成数量，早到早得，如果为0则不限制")

    @HelperExtend.TextBox("PreName", "优惠券前缀", defaultval: Model.PreName, hint: "不超过5个字符")

    @HelperExtend.TextBox("CpLength", "优惠券卡号长度", defaultval: Model.CpLength, hint: "")

    @HelperExtend.RadioGroup("IsPwd", "需要密码", "false,true", "否,是", defaultval: Model.IsPwd)
  
   
 

    @HelperExtend.ImageUpLoad("ImageUrl", "图片", Model.RecordStatus == Sharp.Common.StatusType.add, defaultval: Model.ImageUrl, maxLength: 1)

    @HelperExtend.TextArea("Note", "备注", defaultval: Model.Note, hint: "")


</div>
@section  scripts{


    <script type="text/javascript">
        function OnChangeRule(event) {


        }
        $(function () {


            //初始化表单验证
            $("form").validate({
                ignore: "",
                rules: {

                    Name: {
                        required: true,
                        maxlength: 400,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },
                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Name").val(); },
                                IsCode: false
                            }
                        }
                    },
                    ClassTypeID: { required: true },

                },
                messages: {

                    Name: {
                        required: "请输入名称",
                        maxlength: $.validator.format("名称长度不能大于{0}个字符"),
                        remote: "名称重复"
                    }
                },
                errorPlacement: errorPlace,
                showErrors: function (errorMap, errorList) {
                    $('#jqxLoader').jqxLoader('close');
                    this.defaultShowErrors();
                }

            });
        })
    </script>

    <script type="text/javascript">
        function GetProductCondition(data) {

            data.id = $('#ProductId').val();

        }
        function isShow(element) {
            var val;
            if (!element) {
                val = 0;
            } else {
                val = $(element).val();
            }
            if (val == 0) {
                $("input[name='IsCongZengSongKaiShi']").closest("dl").hide();
                $("#QXTS").closest("dl").hide();
                $("#StartDate").closest("dl").show();

            } else {

                $("input[name='IsCongZengSongKaiShi']").closest("dl").show();
                $("#QXTS").closest("dl").show();
                $("#StartDate").closest("dl").hide();

            }
        } 
    </script>

   
}
