@model AdministrativeRegions
@{
    ViewBag.Title = "编辑行政区域";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEdit.cshtml";
}

@Styles.Render("~/bundles/upimgcss")
@Scripts.Render("~/bundles/ueditor")
@Scripts.Render("~/bundles/uploadJs")

@using EasyCms.Model
<!--内容-->
<div id="floatHead" class="content-tab-wrap">
    <div class="content-tab">
        <div class="content-tab-ul-wrap">
            <ul>
                <li><a class="selected" href="javascript:;">基本信息</a></li>
            </ul>
        </div>
    </div>
</div>
<div class="tab-content">


    @HelperExtend.HiddenFor("ID", Model.ID.ToString())
    @HelperExtend.HiddenFor("RecordStatus", Model.RecordStatus.ToString())

   
    @Html.ValidationSummary()


    @HelperExtend.HelpEdit("ParentID", "ParentName", "上级区域", defaultText: Model.ParentName, hint: "空为一级行政区域", dialogTitle: "选择上级行政区域", InnitFunc: "InnitFunc", onOk: "onOk", IsTree: true, DataControlID: "treeGrid", IsHidButton: Model.RecordStatus == Sharp.Common.StatusType.update)

    @HelperExtend.TextBox("Code", "编号", defaultval: Model.Code, hint: "")

    @HelperExtend.TextBox("Name", "名称", defaultval: Model.Name, hint: "")

    @HelperExtend.TextBox("ShotName", "简称", defaultval: Model.ShotName, hint: "")

    @HelperExtend.TextBox("Qh", "区号", defaultval: Model.Qh, hint: "")

    @HelperExtend.TextBox("ZipCode", "邮编", defaultval: Model.ZipCode, hint: "")

    @HelperExtend.TextBox("Note", "备注", defaultval: Model.Note, hint: "")

</div>

@section  scripts{


    <script type="text/javascript">

        $(function () {


            //初始化表单验证
            $("form").validate({
                ignore: "",
                rules: {
                    "Code": {
                        required: true,
                        maxlength: 50,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },
                                ParentID: function () { return $("#ParentID").val(); },
                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Code").val(); },
                                IsCode: true
                            }
                        }
                    },
                    Name: {
                        required: true,
                        maxlength: 100,
                        remote: {
                            url: '@Url.Action("CheckRepeat")',
                            data: {
                                ID: function () { return $("#ID").val(); },
                                ParentID: function () { return $("#ParentID").val(); },
                                RecordStatus: function () { return $("#RecordStatus").val(); },
                                val: function () { return $("#Name").val(); },
                                IsCode: false
                            }
                        }
                    },
                    ClassTypeID: { required: true },
                    Note: {
                        maxlength: 500
                    }
                },
                messages: {
                    Code: {
                        required: "请输入编号",
                        maxlength: $.validator.format("编号长度不能大于{0}个字符"),
                        remote: "编号重复"
                    },
                    Name: {
                        required: "请输入名称",
                        maxlength: $.validator.format("名称长度不能大于{0}个字符"),
                        remote: "同级分类下名称重复"
                    }
                },
                errorPlacement: function (error, element) {

                    if (element.is(":radio"))
                        error.insertAfter($(element).parent());
                    else if (element.is(":checkbox"))
                        error.insertAfter($(element).parent());
                    else
                        error.insertAfter(element);
                }

            });
        })
    </script>

    <script type="text/javascript">

        function InnitFunc() {
            var source =
            {
                dataType: "json",
                dataFields: [

       { name: 'ID', type: 'string' },

       { name: 'ParentID', type: 'string' },

       { name: 'Code', type: 'string' },

       { name: 'Name', type: 'string' },


       { name: 'Path', type: 'string' }

                ],
                timeout: 10000,
                hierarchy:
                {
                    keyDataField: { name: 'ID' },
                    parentDataField: { name: 'ParentID' }
                },
                id: 'ID',
                root: 'Rows',
                url: " @Url.Action("GetListForSelecte", "Regions", new { area = "Admin" })"
            };
            var dataAdapter = new $.jqx.dataAdapter(source);
            var dataAdapter = new $.jqx.dataAdapter(source);
            var totalHeight = $(window).outerHeight();
            if (totalHeight == 0) {
                totalHeight = $(window).clientHeight();
            }
            var topHight = 50;

            var middleHeight = totalHeight - topHight;

            $("#treeGrid").jqxTreeGrid(
                       {
                           width: "95%",
                           height: "95%",
                           virtualModeCreateRecords: function (expandedRecord, done) {
                               var dataAdapter = new $.jqx.dataAdapter(source,
                                   {
                                       formatData: function (data) {
                                           if (expandedRecord == null) {
                                               data.parentID = 0;
                                           }
                                           else {
                                               data.parentID = expandedRecord.ID;
                                           }
                                           return data;
                                       },
                                       loadComplete: function () {
                                           done(dataAdapter.records);
                                       },
                                       loadError: function (xhr, status, error) {
                                           done(false);
                                           throw new Error("http://services.odata.org: " + error.toString());
                                       }
                                   }
                               );
                               dataAdapter.dataBind();
                           },
                           virtualModeRecordCreating: function (record) {
                               // record is creating.
                           },
                           columns: [
  { text: '编号', dataField: 'Code', align: "center", type: 'string', width: 200 },

  { text: '名称', dataField: 'Name', align: "center", cellsalign: "center", type: 'string', width: 100 },

  { text: '简称', dataField: 'ShotName', align: "center", cellsalign: "center", type: 'string' },




                           ]
                       });
        }
        function onOk(data) {
            if (data.length == 1) {


                $("#ParentName").val(data[0].Name);
                $("#ParentID").val(data[0].ID);


            } else { ErrorMsg("请选择一条数据"); }
        }
        $(function () {

            if ("@TempData.ContainsKey("IsSuccess").ToString().ToLower()" == "true") {
                SucessMsg("@TempData["IsSuccess"]");
            }


        });
    </script>
}
