@using System.Web.Mvc
@using System.Web.Mvc.Html
@using MVCExtention

@helper HiddenFor(string code, string value)
{
    <input name="@code" id="@code" type="hidden" value="@value" />
}
@helper Lable(string text, string lable = "")
{
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(text, lable)

        </dt>
        <dd>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Raw(text)
        </dd>
    </dl>
}
@helper MarkedLable(string text, string lable = "")
{
    <dl style="color:red">
        <dt>
            <span style="color:red">@lable</span>

        </dt>
        <dd>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Raw(text)
        </dd>
    </dl>
}

@helper TextBox(string code, string name, object defaultval = null, string hint = "", string otherClass = "", int width = 200)
{
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>


            @MVCExtention.ExtendHtmlInput.MvcHelper.TextBox(code, defaultval as string, new { @class = "input normal " + otherClass, width = width })

            <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
        </dd>
    </dl>
}
@helper Number(string code, string name, object defaultval = null, string hint = "", string otherClass = "", int width = 200, int min = 0, int max = 1000, int decimalDigits = 0, bool disabled = false)
{
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>

            <div id="@code" name="@code" class="input normal @otherClass"></div>
            <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
            <script type="text/javascript">
                $(function(){
                    @{
                        string widthstr = width + "px";
                        bool spinButtons = true;
                        if (disabled)
                        {
                            spinButtons = false;
                        }

                    }
                    $("#@code").jqxNumberInput({ width: '@widthstr',inputMode :'simple', height: '25px', min: @min, max: @max,
                        decimalDigits:@decimalDigits,disabled:@disabled.ToString().ToLower(),  spinButtons: @spinButtons.ToString().ToLower(),decimal:@defaultval  });
                });


            </script>



        </dd>
    </dl>
}
@helper DropDownList(string code, string name, object defaultval = null, string hint = "", string otherClass = "", int width = 200, EasyCms.Web.DropDownListInfo downInfo = null)
{
if (downInfo == null)
{
    downInfo = new EasyCms.Web.DropDownListInfo();

}
if (string.IsNullOrWhiteSpace(downInfo.DisplayMember))
{
    downInfo.DisplayMember = "Name";

}
if (string.IsNullOrWhiteSpace(downInfo.ValueMember))
{
    downInfo.ValueMember = "ID";

}
if (string.IsNullOrWhiteSpace(downInfo.JsonDataRoor))
{
    downInfo.JsonDataRoor = "Rows";
}
string ctrlID = "DropDownList" + code;
    <dl>
        <dt>

            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>
            <div id='@ctrlID'>
            </div>
            <input name="@code" id="@code" type="hidden" value="@(defaultval as string)" />
            <span style="float: left; color: red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
        </dd>
    </dl>
    <script type="text/javascript">
        $(function(){
            var source =
                   {
                       datatype: "json",
                       datafields: [
                           { name: '@downInfo.ValueMember' },
                           { name: '@downInfo.DisplayMember' },
                           @if (!string.IsNullOrWhiteSpace(downInfo.OtherField)) {

                               string[] fields = downInfo.OtherField.Split(',');
                               foreach (var item in fields)
                               {
                                   @: { name: '@item' }, 
                               }
                           }
                       ],
                       url: '@downInfo.Url',
                       root:"@downInfo.JsonDataRoor",
                       async: false
                   };
            var dataAdapter = new $.jqx.dataAdapter(source);
            // Create a jqxDropDownList
            $("#@ctrlID").jqxDropDownList({
                source: dataAdapter, displayMember: "@downInfo.DisplayMember",placeHolder: "请选择",  theme: "metro",valueMember: "@downInfo.ValueMember", width: @width.ToString(), height: 25 });
            @if (defaultval!=null  ) {

                string val = defaultval.ToString();
                if (!string.IsNullOrWhiteSpace(val))
                {
                    @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("var item =$(\"#" + ctrlID + "\").jqxDropDownList('getItemByValue', '"+val+"');$(\"#" + ctrlID + "\").jqxDropDownList('selectItem', item ); ");
                }
            }

            // subscribe to the select event.
            @if (!string.IsNullOrWhiteSpace(downInfo.change))
            {
                @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("$(\"#" + ctrlID + "\").on('change', function (event) { " + downInfo.change + "(event); });");
            }
            @if (!string.IsNullOrWhiteSpace(downInfo.select))
             {
                @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("$(\"#" + ctrlID + "\").on('select', function (event) { " + downInfo.select + "(event); });");
             }
            @if (!string.IsNullOrWhiteSpace(downInfo.unselect))
             {
                @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("$(\"#" + ctrlID + "\").on('unselect', function (event) { " + downInfo.unselect + "(event); });");
             }
            $("#@ctrlID").on('select', function (event) {
                var args = event.args;
                if (args) {
                    // index represents the item's index.
                    var index = args.index;
                    var item = args.item;
                    $("#@code").val(item.value);
                }else
                {
                    $("#@code").val("");
                }

            });
        });


    </script>
}
@helper DropDownListWithSearch(string code, string name, object defaultval = null, string hint = "", string otherClass = "", int width = 100, EasyCms.Web.DropDownListInfo downInfo = null)
{
if (downInfo == null)
{
    downInfo = new EasyCms.Web.DropDownListInfo();

}
if (string.IsNullOrWhiteSpace(downInfo.DisplayMember))
{
    downInfo.DisplayMember = "Name";

}
if (string.IsNullOrWhiteSpace(downInfo.ValueMember))
{
    downInfo.ValueMember = "ID";

}
if (string.IsNullOrWhiteSpace(downInfo.JsonDataRoor))
{
    downInfo.JsonDataRoor = "Rows";
}
string ctrlID = "DropDownList" + code;

    <div id='@ctrlID'>
    </div>
            <input name="@code" id="@code" type="hidden" value="@(defaultval as string)" />
            <span style="float: left; color: red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>

            <script type="text/javascript">
        $(function(){
            var source =
                   {
                       datatype: "json",
                       datafields: [
                           { name: '@downInfo.ValueMember' },
                           { name: '@downInfo.DisplayMember' }
                       ],
                       url: '@downInfo.Url',
                       root:"@downInfo.JsonDataRoor",
                       async: false
                   };
            var dataAdapter = new $.jqx.dataAdapter(source);
            // Create a jqxDropDownList
            $("#@ctrlID").jqxDropDownList({
                source: dataAdapter, displayMember: "@downInfo.DisplayMember",placeHolder: "请选择",  theme: "metro", valueMember: "@downInfo.ValueMember", width: @width.ToString(), height: 25 });
            @if (defaultval!=null  ) {

                string val = defaultval.ToString();
                if (!string.IsNullOrWhiteSpace(val))
                {
                    @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("var item =$(\"#" + ctrlID + "\").jqxDropDownList('getItemByValue', '"+val+"');$(\"#" + ctrlID + "\").jqxDropDownList('selectItem', item ); ");
                }
            }

            // subscribe to the select event.
            @if (!string.IsNullOrWhiteSpace(downInfo.change))
            {
                @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("$(\"#" + ctrlID + "\").on('change', function (event) { " + downInfo.change + "(event); });");
            }
            @if (!string.IsNullOrWhiteSpace(downInfo.select))
             {
                @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("$(\"#" + ctrlID + "\").on('select', function (event) { " + downInfo.select + "(event); });");
             }
            @if (!string.IsNullOrWhiteSpace(downInfo.unselect))
             {
                @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("$(\"#" + ctrlID + "\").on('unselect', function (event) { " + downInfo.unselect + "(event); });");
             }
            $("#@ctrlID").on('select', function (event) {
                var args = event.args;
                if (args) {
                    // index represents the item's index.
                    var index = args.index;
                    var item = args.item;
                    $("#@code").val(item.value);
                }else
                {
                    $("#@code").val("");
                }

            });
        });


            </script>
}
@helper DropDownListCardEnum(string code, string name, object defaultval = null, Type enumType = null, string hint = "", int width = 150)
{ string ctrlID = "DropDownListCardEnum" + code;

    <dl>
        <dt>

            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>
            <div id='@ctrlID'>
            </div>
            <input name="@code" id="@code" type="hidden" value="@(defaultval as string)" />
            <span style="float: left; color: red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
        </dd>
    </dl>

    <script type="text/javascript">
        $(function(){

            @{
    string jsonStr=string.Empty;
    string[] names=    Enum.GetNames(enumType);
            Array ids = Enum.GetValues(enumType);
            for (int i = 0; i < ids.Length; i++)
            {
                if (i>0)
                {
                    jsonStr += ",";
                }

                  jsonStr+=string.Format("{{ID:{0},Name:\"{1}\"}}",Convert.ToInt32(((int)ids.GetValue(i))),names[i]);

            }
            }
            var enumData=[ @MVCExtention.ExtendHtmlInput.MvcHelper.Raw( jsonStr)];
            var source =
                   {
                       localdata: enumData,
                       datatype: "json",
                       datafields: [
                           { name: 'ID' },
                           { name: 'Name' }
                       ],
                       async: false
                   };
            var dataAdapter = new $.jqx.dataAdapter(source);
            // Create a jqxDropDownList
            $("#@ctrlID").jqxDropDownList({
                source: dataAdapter, displayMember: "Name",placeHolder: "请选择",  theme: "metro", valueMember: "ID", width: @width.ToString(),  height: 25 });
            @if (defaultval!=null  ) {

                string val = defaultval.ToString();
                if (!string.IsNullOrWhiteSpace(val))
                {
                    @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("var item =$(\"#" + code + "\").jqxDropDownList('getItemByValue', '" + val + "');$(\"#" + code + "\").jqxDropDownList('selectItem', item ); ");
                }
            }

        });


    </script>
}
@helper DropDownListEnum(string code, object defaultval = null, Type enumType = null, bool isContainAll = true, bool isMutilCheck = true, string otherClass = "", int width = 150)
{
    <div id='@code'>
    </div>
    <script type="text/javascript">
        $(function(){

            @{
    string jsonStr=string.Empty;
    if (isContainAll)
    {
        jsonStr = "{ID:\"\",Name:\"全部\"},";
    }
    string[] names=    Enum.GetNames(enumType);
            Array ids = Enum.GetValues(enumType);
            for (int i = 0; i < ids.Length; i++)
            {
                if (i>0)
                {
                    jsonStr += ",";
                }

                  jsonStr+=string.Format("{{ID:{0},Name:\"{1}\"}}",Convert.ToInt32(((int)ids.GetValue(i))),names[i]);

            }
            }
            var enumData=[ @MVCExtention.ExtendHtmlInput.MvcHelper.Raw( jsonStr)];
            var source =
                   {
                       localdata: enumData,
                       datatype: "json",
                       datafields: [
                           { name: 'ID' },
                           { name: 'Name' }
                       ],
                       async: false
                   };
            var dataAdapter = new $.jqx.dataAdapter(source);
            // Create a jqxDropDownList
            $("#@code").jqxDropDownList({
                source: dataAdapter, displayMember: "Name",placeHolder: "请选择",  theme: "metro", valueMember: "ID", width: @width.ToString(),checkboxes:@isMutilCheck.ToString().ToLower(), height: 25 });
            @if (defaultval!=null  ) {

                string val = defaultval.ToString();
                if (!string.IsNullOrWhiteSpace(val))
                {
                    @MVCExtention.ExtendHtmlInput.MvcHelper.Raw("var item =$(\"#" + code + "\").jqxDropDownList('getItemByValue', '" + val + "');$(\"#" + code + "\").jqxDropDownList('selectItem', item ); ");
                }
            }

        });


    </script>
}
@helper DateTime(string code, string name, DateTime? defaultval, string hint = "", string otherClass = "", string formatString = "yyyy-MM-dd", int width = 200,bool isShowTime=false,bool showCalendarButton=true)
{
if (isShowTime && formatString== "yyyy-MM-dd")
{
    formatString = "yyyy-MM-dd HH:mm";
}
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>
            <div id="@code" name="@code"></div>
            <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
            <script type="text/javascript">
                $(function(){
                    @{
                        string widthstr = width + "px";
                        string dv = string.Empty;
                        if (defaultval.HasValue && defaultval.Value.Year > 1980)
                        {
                            dv = ",value:\"" + defaultval.Value.ToString("yyyy-MM-dd HH:mm:ss") + "\"";
                        }

                    }
                    $("#@code").jqxDateTimeInput({width: '@widthstr',culture: 'zh-Hans',showCalendarButton:@showCalendarButton.ToString().ToLower() ,showTimeButton: @isShowTime.ToString().ToLower(),formatString: "@formatString" @MVCExtention.ExtendHtmlInput.MvcHelper.Raw(dv)});

                });


            </script>
        </dd>
    </dl>
}
@helper TextArea(string code, string name, object defaultval = null, string hint = "", string otherClass = "", int col = 50, int row = 8)
{
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>
            @MVCExtention.ExtendHtmlInput.MvcHelper.TextArea(code, defaultval as string, row, col, new { id = code, @class = "input " + otherClass })
            <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
        </dd>
    </dl>
}
@helper UEditor(string pccode, string name, object defaultPcval = null, string mobliecode = null, object defaultmoblieval = null, int editorHeight = 300, int EditorWidth = 800, int MobileeditorHeight = 600, int MobileEditorWidth = 400)
{
string vitualPath = HttpContext.Current.Request.ApplicationPath;
if (vitualPath == "/")
{
    vitualPath = string.Empty;
}
string homeUrl = vitualPath + "/Content/ueditor/";
string serverUrl = vitualPath + "/api/controller.ashx";
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(pccode, name)
        </dt>
        <dd>
            @if (string.IsNullOrWhiteSpace(mobliecode))
            {
            <script id="@pccode" type="text/plain" style="width:@EditorWidth.ToString()px;height:@editorHeight.ToString()px;">
            </script>
            <script type="text/javascript">
                    //实例化编辑器
                    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
                    UE.getEditor('@pccode', { textarea: "@pccode",initialContent:UE.utils.html( UE.utils.unhtml( "@defaultPcval" )),UEDITOR_HOME_URL:"@homeUrl",serverUrl:"@serverUrl" });
            </script>
            }
            else
            {
            <div id='@pccode-jqxTongBu'>
                <button style="padding:4px 16px;" id="@pccode-Left">
                    同步到手机
                </button>
                <button style="padding:4px 16px;" id="@pccode-Right">
                    同步到电脑
                </button>

            </div>
            <label style="color:red"> *注：同步到手机：将电脑版里的内容自动同步到手机版里，反正亦然。</label>
            <div id='@pccode-jqxTabs'>
                <ul>
                    <li style="margin-left: 30px;">@name（电脑）</li>
                    <li>@name（手机）</li>
                </ul>
                <div>
                    <script id="@pccode" type="text/plain" style="width:@EditorWidth.ToString()px;height:@editorHeight.ToString()px;">
                    </script>
                    <script type="text/javascript">
                            //实例化编辑器
                            //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
                            UE.getEditor('@pccode', { textarea: "@pccode",initialContent:UE.utils.html( UE.utils.unhtml( "@defaultPcval" )),UEDITOR_HOME_URL:"@homeUrl",serverUrl:"@serverUrl" });
                    </script>
                </div>
                <div>
                    <div>
                        <script id="@mobliecode" type="text/plain" style="width:@MobileEditorWidth.ToString()px;height:@MobileeditorHeight.ToString()px;">
                        </script>
                        <script type="text/javascript">
                                //实例化编辑器
                                //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
                                UE.getEditor('@mobliecode', { textarea: "@mobliecode",initialContent:UE.utils.html( UE.utils.unhtml( "@defaultmoblieval" )),UEDITOR_HOME_URL:"@homeUrl",serverUrl:"@serverUrl" });
                        </script>
                    </div>
                </div>

            </div>
            <script type="text/javascript">
                    $(function(){
                        $("#@pccode-jqxTongBu").jqxButtonGroup({ mode:"default",template:"info" });

                        $("#@pccode-jqxTongBu").on('buttonclick', function (event) {
                            var clickedButton = event.args.button;
                            if (clickedButton[0].id=="@pccode-Left") {
                                Query("确认清空手机版现有内容,并使用电脑版内容同步？",function(){UE.getEditor('@mobliecode').setContent(UE.getEditor('@pccode').getContent());})

                            }
                            else
                            { Query("确认清空电脑版现有内容,并使用手机版内容同步？",function(){UE.getEditor('@pccode').setContent(UE.getEditor('@mobliecode').getContent());})


                            }
                        });
                        $('#@pccode-jqxTabs').jqxTabs({ width: '90%', height:  '90%', position: 'top'});});



            </script>

            }




        </dd>
    </dl>
}
@helper CheckBoxList(string label, string code, string names, dynamic defaultval = null, string hint = "", string otherClass = "")
{
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, label)
        </dt>
        <dd>
            <div class="rule-multi-checkbox">
                <span>
                    @{
                        int i = 0;
                        string[] codes = code.Split(',');
                        string[] nameArr = names.Split(',');
                        if (defaultval != null)
                        {

                        }


                        foreach (var item in codes)
                        {
                            if (!string.IsNullOrWhiteSpace(item))
                            {
                                object val = false;
                                if (defaultval is Array)
                                {


                                    if (defaultval != null && defaultval.Length > 0)
                                    {
                                        if (defaultval.Length == 1)
                                        {
                                            val = defaultval[0];
                                        }
                                        else
                                        { val = defaultval[i]; }

                                    }
                                }
                                else
                                {
                                    val = defaultval;
                                }
                                bool valb = false;
                                bool.TryParse(val.ToString(), out valb);
                <input type="checkbox" name="@item" checked="@val" />
                            }
                <label for="@item">
                    @nameArr[i]
                </label>
                            i++;
                        }
                    }

                </span> <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
            </div>

        </dd>
    </dl>
}

@helper RadioGroup(string code, string name, string vals = "", string texts = "", object defaultval = null, string hint = "", string otherClass = "", string onChange = "")
{
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>
            <div class="rule-multi-radio">
                <span>

                    @{

                        int i = 0;
                        string[] codes = vals.Split(',');
                        string[] nameArr = texts.Split(',');
                        string IsSelected = "";

                        foreach (string item in codes)
                        {
                            IsSelected = "";
                            if (defaultval != null && item.Equals(defaultval.ToString().ToLower())) { IsSelected = "checked=\"checked\""; }
                            string radioId = code;

                            radioId += i.ToString();

                    <input id="@radioId" name="@code" type="radio" @IsSelected value="@item" />
                    <label for="@radioId">@nameArr[i]</label>
                            i++;
                        }

                    }
                </span>

            </div>
            <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>
            @if (!string.IsNullOrWhiteSpace(onChange))
            {
            <script type="text/javascript">
                    $(function() {
                       @MVCExtention.ExtendHtmlInput.MvcHelper.Raw(onChange+"();")
                        $("input[name='@code']").click(function() {
                               @MVCExtention.ExtendHtmlInput.MvcHelper.Raw(onChange+ "(this);")
                        }); });
            </script>
            }
        </dd>
    </dl>

}
@*一个帮助窗体的属性有如下几种：
    1. 引用jqx的样式 和js脚本  js脚本 得保证引用了jquery // ok
    3.窗口标题
    4.宽度，高度，
    5.对应的值，及其显示文本
    6.其他额外返回的值
    7.取数的action
    8.条件值 
*@ 

@helper HelpSmartDialog(string url, string id, string code, string name, string defaultVal = null, string defaultText = null, string hint = "", string otherClass = "", int width = 200,
                        string dialogTitle = "", int dialogWidth = 800, int dialogHeight = 600, bool IsHidButton = false, bool isAppend = false, string OnBefore = "")
{
string dialogID = code + Guid.NewGuid();
string selectButtonID = code + Guid.NewGuid();
string OnBeforeFunc = "isContienu=" + OnBefore + "();";
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
            @MVCExtention.ExtendHtmlInput.MvcHelper.Hidden(id, defaultVal)
        </dt>
        <dd>
            @MVCExtention.ExtendHtmlInput.MvcHelper.TextBox(code, defaultText, new { @class = "input normal " + otherClass, width = width, @readonly = "readonly" })

            @if (!IsHidButton)
            {
            <span class="input-group-btn">

                <button class="btn blue btnHelp" id="@selectButtonID">
                    选择
                </button>
                <button class="btn yellow btnHelp" onclick="javascript: $('#@id').val(''); $('#@code').val('');return false;">
                    清除选择
                </button>
            </span>
            }
            <span style="color:red">@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(hint)</span>

        </dd>
    </dl>
    <script type="text/javascript">

        $(function () {
            Dialog.create("@MVCExtention.ExtendHtmlInput.MvcUrl.Content("~/Content/Images/movie.png")");

            $("#@selectButtonID").click(function () {
                var isContienu = true;
                @if (!string.IsNullOrWhiteSpace(OnBefore))
	{
                     @OnBeforeFunc
	}
                if (isContienu) {
                    Dialog.open("@url" , "@dialogTitle", {
                        onClose: function () {
                            var data=GetThisDialogState();
                            var oldVal="",oldName="";
                            if (data) {
                                oldVal= $("#@id").val( );
                                oldName=  $("#@code").val( );
                                if (!@isAppend.ToString().ToLower()) {
       oldVal="";oldName="";
                            }
                            if (oldVal) {
                                oldVal+=",";
                                oldName+=",";
                            }
                            oldVal+=data.ID;
                            oldName+=data.Name;
                            $("#@id").val(oldVal);
                            $("#@code").val(oldName);

                        }
                    }
                    }, { width: 850, height: 580 });

            }
                    return false;
        });

        });
    </script>
} 
  
@helper ImageUpLoad(string code, string name, bool isAdd, string defaultval = null, int maxLength = 1,bool isAutoUpload=true, EasyCms.Web.FileUpCallBack callBack = null)
{
    <dl style="margin-bottom:20px">
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)

            @if (string.IsNullOrWhiteSpace(defaultval))
            {
                defaultval = Guid.NewGuid().ToString();
            }
            @HelperExtend.HiddenFor(code, defaultval)

        </dt>
        <dd>
            @{
                string divConatinerID = code + "divConatiner";
                string filePicker = code + "filePicker";
                string deleFileUrl = MVCExtention.ExtendHtmlInput.MvcUrl.Action("deleteFile", "UpLoad", new { area = string.Empty });
                string GetFilesUrl = MVCExtention.ExtendHtmlInput.MvcUrl.Action("GetFiles", "UpLoad", new { area = string.Empty });
                string UploadUrl = MVCExtention.ExtendHtmlInput.MvcUrl.Action("UpLoadProcess", "UpLoad", new { area = string.Empty });
                string vitualPath = HttpContext.Current.Request.ApplicationPath;
                if (vitualPath == "/")
                {
                    vitualPath = string.Empty;
                }
                string swfurl = vitualPath + "/Content/ueditor/third-party/webuploader/Uploader.swf";
            }
            <div id="@divConatinerID">
                <div class="fileList">
                </div>
                <div class="cp_img_jia" id="@filePicker"></div>
                <button class="ctlBtn btn btn-default">开始上传</button>

            </div>
            <script type="text/javascript">

                $(function () {
                    obj: {
                        var divConatiner = "#@divConatinerID";
                        var fileList = ".fileList";
                        var filePicker = "#@filePicker";
                        var $ = jQuery,
                        $list = $(divConatiner).find(fileList),
                        // 优化retina, 在retina下这个值是2
                        ratio = window.devicePixelRatio || 1,
                        // 缩略图大小
                        thumbnailWidth = 90 * ratio,
                        thumbnailHeight = 90 * ratio,
                        // Web Uploader实例
                        uploader;
                        window.imgupload={};

                        uploader = WebUploader.create({
                            // 选完文件后，是否自动上传。
                            auto: @isAutoUpload.ToString().ToLower(),

                            disableGlobalDnd: true,
                            // swf文件路径
                            swf:'@swfurl',
                            // 文件接收服务端。
                            server: '@UploadUrl',
                            // 选择文件的按钮。可选。
                            // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                            pick: filePicker,
                            formData: {
                                uid:   "@defaultval"||  $("#@divConatinerID").parents("form").find("#@code").val()
                            },
                            //只允许选择图片
                            accept: {
                                title: 'Images',
                                extensions: 'gif,jpg,jpeg,bmp,png',
                                mimeTypes: 'image/*'
                            }
                        });

                        window.imgupload.@divConatinerID =uploader;

                        uploader.on('fileQueued', function (file) {
                            if ($("#@divConatinerID > .fileList").children().length >=@maxLength ) {
                                var msg="只能添加"+@maxLength+"个图片";
                            ErrorMsg(msg);
                            return false;
                        }
                        });
                    // 当有文件添加进来的时候
                    uploader.on('fileQueued', function (file) {


                        var $li = $(
                                '<div id="' + file.id + '" class="cp_img">' +
                                    '<img>' +
                                '<div class="cp_img_jian"></div></div>'
                                ),
                            $img = $li.find('img');
                        // $list为容器jQuery实例
                        $list.append($li);

                        // 创建缩略图
                        // 如果为非图片文件，可以不用调用此方法。
                        // thumbnailWidth x thumbnailHeight 为 100 x 100
                        uploader.makeThumb(file, function (error, src) {
                            if (error) {
                                $img.replaceWith('<span>不能预览</span>');
                                return;
                            }

                            $img.attr('src', src);

                        }, thumbnailWidth, thumbnailHeight);


                        //显示删除按钮
                        $(divConatiner).find(".cp_img").on("mouseover", function () {
                            $(this).children(".cp_img_jian").css('display', 'block');

                        });
                        //隐藏删除按钮
                        $(divConatiner).find(".cp_img").on("mouseout", function () {
                            $(this).children(".cp_img_jian").css('display', 'none');
                        });
                        //执行删除方法
                        $list.on("click", ".cp_img_jian", function () {
                            var Id = $(this).parent().attr("id");
                            var file=uploader.getFile(Id, true);

                            uploader.removeFile(file);
                            $(this).parent().remove();
                            var $li = $('#' + file.id);
                            if ( $li.attr("fileID" )) {
                                //删除附件数据
                                $.get("@deleFileUrl",{id:$li.attr("fileID" )});
                            }
                            @if (callBack!=null && !string.IsNullOrWhiteSpace(callBack.OnDeleteName))
                                {
                                 <text> @callBack.OnDeleteName</text><text>(Id);</text>;

                                }


                        });

                    });

                    // 文件上传过程中创建进度条实时显示。
                    uploader.on('uploadProgress', function (file, percentage) {
                        var $li = $('#' + file.id),
                            $percent = $li.find('.progress span');

                        // 避免重复创建
                        if (!$percent.length) {
                            $percent = $('<p class="progress"><span></span></p>')
                                    .appendTo($li)
                                    .find('span');
                        }

                        $percent.css('width', percentage * 100 + '%');
                    });

                    // 文件上传成功，给item添加成功class, 用样式标记上传成功。
                    uploader.on('uploadSuccess', function (file, response) {

                        $('#' + file.id).addClass('upload-state-done');

                    });

                    // 文件上传失败，显示上传出错。
                    uploader.on('uploadError', function (file) {
                        var $li = $('#' + file.id),
                            $error = $li.find('div.error');

                        // 避免重复创建
                        if (!$error.length) {
                            $error = $('<div class="error"></div>').appendTo($li);
                        }

                        $error.text('上传失败');
                    });
                    uploader.on( 'uploadAccept', function( file, response ) {
                        var $li = $('#' + file.file.id);
                        if ( response.error ) {
                            // 通过return false来告诉组件，此文件上传有错。
                            $error = $li.find('div.error');

                            // 避免重复创建
                            if (!$error.length) {
                                $error = $('<div class="error"></div>').appendTo($li);
                            }
                            $error.text(response.error.message);
                            return false;
                        }
                        $li.attr("fileID",response.uid);
                        $li.parents("form").find("#@code").val(response.RefID);
                        uploader.options.formData.uid=response.RefID;
                        @if (callBack!=null && !string.IsNullOrWhiteSpace(callBack.OnUpSccessName))
                        {
                            <text> @callBack.OnUpSccessName</text><text>();</text>;
                        }

                    });
                    // 完成上传完了，成功或者失败，先删除进度条。
                    uploader.on('uploadComplete', function (file) {
                        var $li = $('#' + file.id);
                        $li.find('.progress').remove();
                        $error = $li.find('div.error');

                        // 避免重复创建
                        if (!$error.length) {
                            $error = $('<div class="error"></div>').appendTo($li);
                        }

                        $error.text("上传成功");

                    });

                    //所有文件上传完毕
                    uploader.on("uploadFinished", function () {
                        //提交表单

                    });

                    //开始上传
                    $(divConatiner).find(".ctlBtn").click(function () {
                        uploader.upload();
                        return false;
                    });
                }

                //加载现有图片
                @if (!string.IsNullOrWhiteSpace(defaultval)   )
                {
                    if (!isAdd)
                    {

               <text>
                 var GetFilesUrl='@GetFilesUrl';
                $.getJSON(GetFilesUrl,{refid:"@defaultval"}, function(data){

                    var $list =$("#@divConatinerID > .fileList");
                    if (data.length>0) {
                        for (var i = 0; i < data.length; i++) {
                            var file=data[i];
                            var $li = $(
                     '<div id="' + file.ID + '"fileid="'+file.ID+'" class="cp_img  upload-state-done">' +
                         '<img src="'+file.WebFilePath+'">' +
                     '<div class="cp_img_jian"></div></div>'
                     );

                            // $list为容器jQuery实例
                            $list.append($li);
                        }

                        //显示删除按钮
                        $list.find(".cp_img").on("mouseover", function () {
                            $(this).children(".cp_img_jian").css('display', 'block');

                        });
                        //隐藏删除按钮
                        $list.find(".cp_img").on("mouseout", function () {
                            $(this).children(".cp_img_jian").css('display', 'none');
                        });
                        //执行删除方法
                        $list.on("click", ".cp_img_jian", function () {
                            var $li =  $(this).parent();
                            var Id = $li.attr("id");
                            $(this).parent().remove();

                            if ( $li.attr("fileID" )) {
                                //删除附件数据
                                var url='@deleFileUrl';
                                $.get(url,{id:$li.attr("fileID" )});
                            }
                            @if (callBack!=null && !string.IsNullOrWhiteSpace(callBack.OnDeleteName))
                            {
                                <text> @callBack.OnDeleteName+"(Id);" </text>
                            }


                        });
                    }

                }); </text>




                    }



                }



                });

            </script>
        </dd>
    </dl>
}
@*级联下来框*@
@helper DropDownListClass(string code, string name, string url, string valuemember = "ID", string displaymember = "Name", string hint = "", string otherClass = "",bool isCard = false)
{
string dropid = "jqxDropDownList" + code;
    <input type="hidden" id="@code" name="@code" value="">
if (isCard)
{
        <dl>
            <dt>
                @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
            </dt>
            <dd>
            <dd>

                <div style='float: left;' id='@dropid'>
                </div>


            </dd>

        </dl>
}
else
{ <div>  <div style='float: left;' id='@dropid'>
        </div>  </div>
}

    <script type="text/javascript">
        $(document).ready(function () {

            var url = "@url";
            var source =
            {
                datatype: "json",
                datafields: [
                    { name: '@valuemember' },
                    { name: '@displaymember' }
                ],
                id: 'ID',
                url: url
            };
            // create a new instance of the jqx.dataAdapter.
            var dataAdapter = new $.jqx.dataAdapter(source);
            $("#"+"@dropid").jqxDropDownList({ source: dataAdapter,placeHolder: "请选择",  theme: "metro", displayMember: "@displaymember", valueMember: "@valuemember", width: 'auto', height: '25px' });

            $("#"+"@dropid").on('select', function (event) {
                onSelectChange(event);
            });


            function onSelectChange(event)
            {
                var args = event.args;
                if (args) {
                    var item = args.item;
                    var categroy = item.value;
                    $("#"+"@code").val(item.value);
                    //删除其子类
                    $(event.currentTarget).  nextAll().remove();
                    //创建其子类
                    //同时生成dropdownlist
                    //$.getJSON(url, { id: categroy }, function () {
                    var guid = "dropdown" + categroy;
                    $(event.currentTarget).parent().append("<div style='float: left;' id='" + guid + "'> </div>");
                    source. url= url + "/" + categroy;
                    var dataAdapter1 = new $.jqx.dataAdapter(source);
                    $("#" + guid).jqxDropDownList({ source: dataAdapter1,placeHolder: "请选择",  theme: "metro", displayMember: "Name", valueMember: "ID",  width: 'auto',height: '25px' });

                    $("#"+guid).on('select', function (event) {
                        onSelectChange(event);
                    });
                    $("#"+guid).on('bindingComplete', function (event) {

                        if ( $("#"+guid).jqxDropDownList('getItems').length==0) {
                            $(event.currentTarget) .remove();
                        }

                    });

                    //});
                }
            }
        });
    </script>
}

@*地区级联下来框
    如果有默认值 ，先将当前默认值的path获取到
    然后分解path ,逐级获取
    如果没有默认值，则只获取第2级别的数据
*@

@helper RegionDropDownList(string code, string name, int defaultval = 0, string valuemember = "ID", string displaymember = "Name", string hint = "", string otherClass = "")
{
string dropid = "jqxDropDownList" + code;
string defualtid = "defualtid" + code;
string defualtPath = new EasyCms.Business.AdministrativeRegionsBll().GetPathByDefault(defaultval);
    <dl>
        <dt>
            @MVCExtention.ExtendHtmlInput.MvcHelper.Label(code, name)
        </dt>
        <dd>
        <dd>
            <input type="hidden" id="@code" name="@code" value="@defaultval">
            <input type="hidden" id="@defualtid" value="@defualtPath">
            <div style='float: left;' id='@dropid'>
            </div>
            <script type="text/javascript">
                var url = "@MVCExtention.ExtendHtmlInput.MvcUrl.RouteUrl("ApiWithWeb", new { controller = "Region", action = "GetChildRegion", })";
                var source =
                {
                    datatype: "json",
                    datafields: [
                        { name: '@valuemember' },
                        { name: '@displaymember' }
                    ],
                    id: 'ID',
                    url: url + "/1"
                };
                $(document).ready(function () {



                    var dataAdapter = new $.jqx.dataAdapter(source);
                    $("#" + "@dropid").jqxDropDownList({ source: dataAdapter, placeHolder: "请选择",  theme: "metro",displayMember: "@displaymember", valueMember: "@valuemember", width: 'auto', height: '25px' });

                    $("#" + "@dropid").on('select', function (event) {
                        onSelectChange(event);
                    });

                    @if (defaultval>0)
                    {

                            <text>
                    $("#" + "@dropid").on('bindingComplete', function (event) {
                        OnbindingComplete(event);
                    });
                    </text>


                    }

                });
                function OnbindingComplete(event) {
                    var defval = $("#" + "@defualtid").val();
                    var vals = defval.split("|");
                    if (vals.length > 0) {

                        var curentVal = vals[0];
                        //重置val;
                        var index = defval.indexOf('|');
                        if (index > -1) {
                            $("#" + "@defualtid").val(defval.substr(index + 1));
                        } else {
                            $("#" + "@defualtid").val("");
                        }
                        //设置当前dropdownlist currentval
                        if (curentVal) {
                            var item =  $("#"+event.target.id).jqxDropDownList('getItemByValue', curentVal);
                            $("#"+event.target.id).jqxDropDownList('selectItem', item);
                        }

                    }

                }
                function onSelectChange(event) {
                    var args = event.args;
                    if (args) {
                        var item = args.item;
                        var categroy = item.value;
                        $("#" + "@code").val(item.value); //赋值
                        $(event.currentTarget).nextAll().remove();//先删除其子类
                        createChid(categroy,event);
                    }
                }
                function createChid(categroy,event) { //创建其子类
                    //同时生成dropdownlist
                    //$.getJSON(url, { id: categroy }, function () {
                    var guid = "@dropid" + categroy;
                    $(event.currentTarget).parent().append("<div style='float: left;' id='" + guid + "'> </div>");
                    source.url = url + "/" + categroy;
                    var dataAdapter1 = new $.jqx.dataAdapter(source);
                    $("#" + guid).jqxDropDownList({ source: dataAdapter1,placeHolder: "请选择",  theme: "metro", displayMember: "Name", valueMember: "ID", width: 'auto', height: '25px' });
                    $("#" + guid).on('select', function (event) {
                        onSelectChange(event);
                    });

                    $("#" + guid).on('bindingComplete', function (event) {
                        if ($("#" + guid).jqxDropDownList('getItems').length == 0) {
                            $(event.currentTarget).remove();
                        }
                        OnbindingComplete(event);
                    });
                }
            </script>

        </dd>

    </dl>
}
@helper img(string imgName, string otherStyle = "")
{
    <img src="~/Content/Images/@imgName" alt="" style="@otherStyle" />
}
@helper imgUrl(string imgName)
{<text>http://@HttpContext.Current.Request.Url.Authority@HttpContext.Current.Request.ApplicationPath</text><text>Content/Images/@imgName</text>}
@helper ParseEnum(Type enumType)
{
string result = "valObj: [";
Array ids = Enum.GetValues(enumType);
for (int i = 0; i < ids.Length; i++)
{
    if (i > 0)
    {
        result += ",";
    }
    result += string.Format("{{ key: {0}, val: '{1}' }}", Convert.ToInt32(ids.GetValue(i)), ids.GetValue(i).ToString());
}
result += "]";
    <text>@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(result)</text>
}
@helper Parsebool()
{
string result = "valObj: [";
result += "{key: true, val: '是' },{key: false, val: '否' }";
result += "]";
    <text>@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(result)</text>
}
@helper ParseEnable()
{
string result = "valObj: [";
result += "{key: true, val: '启用' },{key: false, val: '停用' }";
result += "]";
    <text>@MVCExtention.ExtendHtmlInput.MvcHelper.Raw(result)</text>
}




